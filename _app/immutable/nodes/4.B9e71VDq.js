import"../chunks/CWj6FrbW.js";import"../chunks/CER80Plo.js";import{D as j,n as _,o as v,R as D,a6 as R,y as w,T as E,V as T,_ as A,W as C,q as y,Y as F,p as O,z as m,A as H,B as o,C as I,F as P,G as l,H as c}from"../chunks/Burfb93A.js";function r(i,f,t=!1,u=!1,d=!1){var k=i,e="";j(()=>{var p=D;if(e===(e=f()??"")){_&&v();return}if(p.nodes_start!==null&&(R(p.nodes_start,p.nodes_end),p.nodes_start=p.nodes_end=null),e!==""){if(_){w.data;for(var n=v(),h=n;n!==null&&(n.nodeType!==E||n.data!=="");)h=n,n=T(n);if(n===null)throw A(),C;y(w,h),k=F(n);return}var a=e+"";t?a=`<svg>${a}</svg>`:u&&(a=`<math>${a}</math>`);var s=O(a);if((t||u)&&(s=m(s)),y(m(s),s.lastChild),t||u)for(;m(s);)k.before(m(s));else k.before(s)}})}var M=H('<h1>Feli_mono</h1> <h2>Presentation</h2> <p>The purpose of the project <em>Feli</em> is to <em>install locally</em> a pure front-end web-app. <em>Feli</em> means <strong>F</strong>rnt <strong>E</strong>nd <strong>L</strong>ocally <strong>I</strong>nstalled.</p> <h2>Links</h2> <p>The mono-repo <a href="https://github.com/charlyoleg2/feli_mono" rel="nofollow">feli_mono</a> publishes two packages:</p> <ul><li><a href="https://www.npmjs.com/package/feli" rel="nofollow">feli</a></li> <li><a href="https://www.npmjs.com/package/create-feli" rel="nofollow">create-feli</a></li></ul> <p>And it generates those <a href="https://charlyoleg2.github.io/feli_mono/" rel="nofollow">html-pages</a></p> <h2>Alternatives</h2> <p><a href="https://deno.com/deploy" rel="nofollow">deno deploy</a> may propose a way to install locally pure front-end web-app.</p> <h2>Requirements</h2> <ul><li><a href="https://nodejs.org" rel="nofollow">node</a> > 22.0.0</li> <li><a href="https://docs.npmjs.com/cli" rel="nofollow">npm</a> > 11.0.0</li></ul> <h2>Installation</h2> <pre class="language-bash"><!></pre> <h2>Usage</h2> <p>Here the typical code for creating a mini-server:</p> <pre class="language-javascript"><!></pre> <h2>Dev</h2> <p>In a terminal, run:</p> <pre class="language-shell"><!></pre> <h2>Upgrade dependencies</h2> <pre class="language-bash"><!></pre> <p>or</p> <pre class="language-bash"><!></pre> <h2>Publish a new release</h2> <pre class="language-bash"><!></pre>',1);function N(i){var f=M(),t=o(I(f),24),u=l(t);r(u,()=>'<code class="language-bash"><span class="token function">npm</span> i <span class="token parameter variable">-D</span> feli</code>'),c(t);var d=o(t,6),k=l(d);r(k,()=>`<code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> feli_cli <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'../dist/index.js'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> process <span class="token keyword">from</span> <span class="token string">'node:process'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> path <span class="token keyword">from</span> <span class="token string">'node:path'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> scrDir <span class="token operator">=</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>dirname<span class="token punctuation">;</span>
<span class="token keyword">const</span> defaultPublicDir <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>scrDir<span class="token punctuation">,</span> <span class="token string">'public'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
	<span class="token keyword">await</span> <span class="token function">feli_cli</span><span class="token punctuation">(</span>defaultPublicDir<span class="token punctuation">,</span> process<span class="token punctuation">.</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
	console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">CATCH ERROR: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>err<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`),c(d);var e=o(d,6),p=l(e);r(p,()=>`<code class="language-shell"><span class="token function">git</span> clone https://github.com/charlyoleg2/feli_mono.git
<span class="token builtin class-name">cd</span> feli_mono
<span class="token function">npm</span> <span class="token function">install</span>
<span class="token function">npm</span> run ci
<span class="token function">node</span> pkg/check-feli/dist/check-feli.js
<span class="token function">npm</span> run check-feli:run</code>`),c(e);var n=o(e,4),h=l(n);r(h,()=>`<code class="language-bash"><span class="token function">npm</span> outdated
<span class="token function">npm</span> update <span class="token parameter variable">--save</span>
<span class="token function">git</span> commit <span class="token parameter variable">-am</span> <span class="token string">'npm update --save'</span></code>`),c(n);var a=o(n,4),s=l(a);r(s,()=>`<code class="language-bash">npx npm-check-updates
npx npm-check-updates <span class="token parameter variable">--upgrade</span>
<span class="token function">npm</span> <span class="token function">install</span>
<span class="token function">git</span> commit <span class="token parameter variable">-am</span> <span class="token string">'npx npm-check-updates --upgrade'</span></code>`),c(a);var g=o(a,4),b=l(g);r(b,()=>`<code class="language-bash"><span class="token function">npm</span> run versions
<span class="token function">git</span> commit <span class="token parameter variable">-am</span> <span class="token string">'increment sub-package versions'</span>
<span class="token function">npm</span> version patch
<span class="token function">git</span> push
<span class="token function">git</span> push origin v0.5.3</code>`),c(g),P(i,f)}function U(i){N(i)}export{U as component};
